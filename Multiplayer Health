//This actually works! Right now raycasting is disabled, but works as a proof of concept

using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.Networking;

public class CombinedScript : NetworkBehaviour {

    private int damage = 1;
    private int range = 100;
    public GameObject self;
    public GameObject enemy;
    [SerializeField] private Transform camTransform;
    private RaycastHit hit;

    [SyncVar(hook = "OnHealthChanged")] private int health = 4;
    public GameObject TextObject;
    private Text healthText;


    void Start () {

        if (GameObject.Find("Player1") == true)
        {
            self.name = "Player2";
        }
        if (GameObject.Find("Player1") == false)
        {
            self.name = "Player1";
        }

        if (isLocalPlayer)
        {
            self.GetComponent<Renderer>().material.color = Color.blue; //SETS LOCAL PLAYER BODY TO BLUE
            healthText = TextObject.GetComponent<Text>();
            SetHealthText();
        }
    }
	
	// Update is called once per frame
	void Update () {
        Shoot();

        if (self == GameObject.Find("Player1"))
        {
            enemy = GameObject.Find("Player2");
        }
        if (self == GameObject.Find("Player2"))
        {
            enemy = GameObject.Find("Player1");
        }
    }

    void Shoot()
    {
        if (isLocalPlayer == false)
        {
            return;
        }

        if (Input.GetKeyDown("space"))
        {
            CmdTellServerWhoWasShot(enemy.name.ToString(), damage);

            //if (Physics.Raycast(camTransform.TransformPoint(0, 0, 0.5f), camTransform.forward, out hit, range))
            //{
            //    string name = hit.transform.name;
            //    CmdTellServerWhoWasShot(name, damage);
            //}
        }
    }

    [Command]
    void CmdTellServerWhoWasShot(string name, int damage)
    {
        GameObject go = GameObject.Find(name);
        go.GetComponent<CombinedScript>().DeductHealth(damage); //THIS ACTUALLY TELLS OTHER COMPUTER WHAT TO DO
    }

    void SetHealthText()
    {
        if (isLocalPlayer)
        {
            healthText.text = health.ToString();
        }
    }

    public void DeductHealth(int damage)
    {
        health -= damage;
    }

    void OnHealthChanged(int hlth)
    {
        health = hlth;
        SetHealthText();
    }
}
